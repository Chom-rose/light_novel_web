const db = require("../db/db");
const jwt = require("jsonwebtoken");
const JWT_SECRET = process.env.JWT_SECRET || "dev_secret_change_me";

function issueToken(user, res) {
  const token = jwt.sign(
    {
      id: user.id,
      username: user.username,
      is_admin: user.is_admin,
      is_premium: user.is_premium, // 0 ‡∏´‡∏£‡∏∑‡∏≠ 1 ‡∏ï‡∏≤‡∏° DB ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
    },
    JWT_SECRET,
    { expiresIn: "7d" }
  );

  // ‡πÄ‡∏ã‡πá‡∏ï httpOnly cookie
  res.cookie("token", token, {
    httpOnly: true,
    sameSite: "lax",
    secure: process.env.NODE_ENV === "production",
    maxAge: 7 * 24 * 60 * 60 * 1000,
  });

  return token;
}
// 1. ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
exports.upgrade = (req, res) => {
  db.run("UPDATE users SET is_premium = 1 WHERE id = ?", [req.user.id], function (err) {
    if (err) return res.status(500).json({ error: err.message });
    // 2. ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• user ‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÅ‡∏•‡πâ‡∏ß‡∏°‡∏≤‡∏™‡∏£‡πâ‡∏≤‡∏á token ‡πÉ‡∏´‡∏°‡πà
    db.get("SELECT * FROM users WHERE id = ?", [req.user.id], (err2, user) => {
      if (err2) return res.status(500).json({ error: err2.message });
      const token = issueToken(user, res);
      // 3. ‡∏™‡πà‡∏á token ‡πÉ‡∏´‡∏°‡πà‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡πÉ‡∏´‡πâ client (‡πÄ‡∏ú‡∏∑‡πà‡∏≠ frontend ‡πÄ‡∏Å‡πá‡∏ö‡πÉ‡∏ô localStorage ‡∏î‡πâ‡∏ß‡∏¢)
      res.json({ message: "‡∏≠‡∏±‡∏õ‡πÄ‡∏Å‡∏£‡∏î‡πÄ‡∏õ‡πá‡∏ô‡∏û‡∏£‡∏µ‡πÄ‡∏°‡∏µ‡∏¢‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à üéâ", token });
    });
  });
};

exports.cancel = (req, res) => {
  db.run("UPDATE users SET is_premium = 0 WHERE id = ?", [req.user.id], function (err) {
    if (err) return res.status(500).json({ error: err.message });

    db.get("SELECT * FROM users WHERE id = ?", [req.user.id], (err2, user) => {
      if (err2) return res.status(500).json({ error: err2.message });
      const token = issueToken(user, res);
      res.json({ message: "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏û‡∏£‡∏µ‡πÄ‡∏°‡∏µ‡∏¢‡∏°‡πÅ‡∏•‡πâ‡∏ß", token });
    });
  });
};
