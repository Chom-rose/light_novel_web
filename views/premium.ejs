<%- include('includes/head') %>
</head>
<body class="bg-gray-100">
  <%- include('includes/nav') %>

  <main class="max-w-3xl mx-auto py-12">
    <div class="bg-white p-8 rounded-xl shadow text-center">
      <h1 class="text-2xl font-bold mb-3">‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å Premium</h1>
      <p class="text-gray-600">‡∏™‡πÅ‡∏Å‡∏ô QR Code ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô 99 ‡∏ö‡∏≤‡∏ó</p>

      <div id="qrBox" class="my-6">
        <!-- ‡∏£‡∏π‡∏õ QR ‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡πÄ‡∏ï‡∏¥‡∏°‡∏î‡πâ‡∏ß‡∏¢ JS -->
      </div>

      <div class="flex items-center justify-center gap-3">
        <button id="checkStatus"
          class="bg-indigo-600 text-white px-6 py-2 rounded-lg hover:bg-indigo-700">
          ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
        </button>
      </div>

      <div id="statusMsg" class="mt-4 text-sm text-gray-600"></div>

      <p class="mt-6 text-xs text-gray-400">
        * ‡∏´‡∏≤‡∏Å‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏î ‚Äú‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‚Äù ‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á ‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏´‡∏ô‡πâ‡∏≤
      </p>
    </div>
  </main>

  <script>
    // ‡∏î‡∏∂‡∏á token ‡∏à‡∏≤‡∏Å localStorage ‡∏´‡∏£‡∏∑‡∏≠ cookie (httpOnly ‡∏Å‡πá‡∏à‡∏∞‡∏™‡πà‡∏á‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡πÉ‡∏ô request)
    function getToken() {
      const ls = localStorage.getItem("token");
      if (ls) return ls;
      const m = document.cookie.match(/(?:^|;\s*)token=([^;]+)/);
      return m ? decodeURIComponent(m[1]) : null;
    }

    async function start() {
      const token = getToken();
      if (!token) {
        alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡πà‡∏≠‡∏ô");
        window.location.href = "/login";
        return;
      }

      // ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÇ‡∏´‡∏•‡∏î
      const qrBox = document.getElementById("qrBox");
      qrBox.innerHTML = `<div class="text-gray-500">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á QR...</div>`;

      try {
        const res = await fetch("/payment/start", {
          method: "POST",
          headers: { "Authorization": "Bearer " + token }
        });

        // ‡∏Å‡∏±‡∏ô response ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà JSON (‡πÄ‡∏ä‡πà‡∏ô error page)
        const text = await res.text();
        let data;
        try {
          data = JSON.parse(text);
        } catch {
          throw new Error("Invalid response: " + text.slice(0, 120));
        }

        if (!res.ok) {
          throw new Error(data.error || "Start payment failed");
        }

        if (data.qrImage) {
          qrBox.innerHTML = `
            <img src="${data.qrImage}" alt="PromptPay QR" class="mx-auto w-64 h-64 border rounded-lg object-contain bg-white p-2">
          `;
        } else {
          throw new Error("qrImage not found in response");
        }
      } catch (err) {
        console.error("[premium] /payment/start error:", err);
        qrBox.innerHTML = `<div class="text-red-600">‡∏™‡∏£‡πâ‡∏≤‡∏á QR ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${err.message}</div>`;
      }
    }

    async function checkStatus() {
      const token = getToken();
      if (!token) {
        alert("‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö");
        return;
      }
      try {
        const res = await fetch("/auth/me", {
          headers: { "Authorization": "Bearer " + token }
        });
        const data = await res.json();
        const el = document.getElementById("statusMsg");
        if (res.ok && data.user?.is_premium === 1) {
          el.innerHTML = `<span class="text-green-600 font-semibold">‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏õ‡πá‡∏ô Premium ‡πÅ‡∏•‡πâ‡∏ß üéâ</span>`;
        } else {
          el.innerHTML = `<span class="text-red-500">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô Premium</span>`;
        }
      } catch (e) {
        document.getElementById("statusMsg").innerHTML =
          `<span class="text-red-600">‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à</span>`;
      }
    }

    document.addEventListener("DOMContentLoaded", () => {
      start();
      document.getElementById("checkStatus").addEventListener("click", checkStatus);

      // (‡∏≠‡∏≠‡∏õ‡∏ä‡∏±‡∏ô) auto-check ‡∏ó‡∏∏‡∏Å 5 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ ‡∏ô‡∏≤‡∏ô‡∏™‡∏∏‡∏î 30 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
      // let tries = 0;
      // const iv = setInterval(async () => {
      //   tries++;
      //   await checkStatus();
      //   if (document.getElementById("statusMsg").textContent.includes("Premium") || tries >= 6) {
      //     clearInterval(iv);
      //   }
      // }, 5000);
    });
  </script>

  <script src="/js/main.js"></script>
</body>
</html>
